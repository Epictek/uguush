#!/usr/bin/env bash
#
# poomf - upload to pomf.se, uguu.se, and teknik.io
#

## CONFIGURATION

# colors
n="$(tput sgr0)"
r="$(tput setaf 1)"
g="$(tput setaf 2)"

# screenshot utility
fshot='maim --hidecursor'
sshot='maim -s --hidecursor'
wshot="maim -i $(xprop -root _NET_ACTIVE_WINDOW | grep -o '0x.*') --hidecursor"

# default screenshot name
FILE="$(mktemp --suffix=.png)"

# default delay
secs='0'

# image host
usehost='pomf'
hosts='pomf uguu teknik'

## EXIT IF NO ARGUMENTS ARE FOUND

if [ $# -lt 1 ]; then
  echo '`poomf` requres and argument. Run `poomf -h` for help.'
  exit 1
fi

## FUNCTIONS

depends() {
  if ! type curl &> /dev/null; then
    echo >&2 "Checking for curl... [${r}FAILED${n}]"
    echo '`curl` not found.'
    exit 1
  fi
}

usage() {
  cat <<-HELP
poomf - upload to pomf.se, uguu.se, and teknik.io

Usage:
  $(basename "${0}") [options]

Options:
    -d           Delay the screenshot by the specified number of seconds.
    -f           Take a fullscreen screenshot.
    -h           Show this help message.
    -o           Select a host to use. Can be pomf, uguu, or teknik.
    -s           Take a selection screenshot.
    -t           Use HTTPS, if the host supports it.
    -u <file>    Upload a file.
    -x           Do not notify dbus, update the log, or modify the clipboard.
    -w           Take a screenshot of the current window.
HELP
}

delay() {
  for (( i=secs; i > 0; --i )) ; do
    echo "${i}..."
    sleep 1
  done
}

screenshot() {
  if [ "${ful}" ]; then
    ${fshot} "${FILE}"
  elif [ "${sel}" ]; then
    ${sshot} "${FILE}"
  elif [ "${win}" ]; then
    ${wshot} "${FILE}"
  fi
}

upload() {
  for (( i = 1; i <= 3; i++ )); do
    printf %s "Try #${i}... "

    if [ "${https}" ]; then
      case "${usehost}" in
        pomf) upurl='https://pomf.se/upload.php?output=gyazo' ;;
        teknik) upurl='https://api.teknik.io/upload/post' ;;
        uguu) upurl='unsupported' ;;
      esac
    else
      case "${usehost}" in
        pomf) upurl='http://pomf.se/upload.php?output=gyazo' ;;
        teknik) upurl='unsupported' ;;
        uguu) upurl='http://uguu.se/api.php?d=upload' ;;
      esac
    fi

    if [ "${upurl}" = 'unsupported' ]; then
      echo "[${r}FAILED${n}]"
      echo "${usehost} doesn't support $([ "${https}" ] && echo HTTPS || echo HTTP)."
      exit 1
    else
      if [ "${usehost}" = 'pomf' ]; then
        result="$(curl -sf -F files[]="@${FILE}" "${upurl}")"
      elif [ "${usehost}" = 'uguu' ]; then
        result="$(curl -sf -F file="@${FILE}" "${upurl}")"
      elif [ "${usehost}" = 'teknik' ]; then
        result="$(curl -sf -F file="@${FILE}" "${upurl}")"
        result="${result##*name\":\"}"
        result="${result%%\"*}"
        result="https://u.teknik.io/${result}"
      fi
    fi

    if [ "${?}" = 0 ]; then

      if [ ! "${nocomm}" ]; then
        printf %s "${result}" | xclip -selection primary
        printf %s "${result}" | xclip -selection clipboard

        echo "$(date +"%D %R") | "${FILE}" | "${result}"" >> ~/.pomfs.txt

        notify-send 'pomf!' "${result}"
      fi

      echo "[${g}OK${n}]"
      echo "File has been uploaded: ${result}"

      # if we took a screenshot, remove the temporary file
      if [ -z "${upl}" ]; then
        rm "${FILE}"
      fi

      exit
    else
      echo "[${r}FAILED${n}]"
    fi
  done
}

## PARSE OPTIONS

while getopts :d:fho:stu:wx opt; do
  case "${opt}" in
    d)
      # set delay value
      secs="${OPTARG}" ;;
    f)
      # fullscreen
      ful='true' ;;
    h)
      # print help
      usage
      exit 0 ;;
    o)
      # set host
      [[ "${hosts}" =~ ${OPTARG} ]] && usehost="${OPTARG}" || exit 1 ;;
    s)
      # take shot with selection
      sel='true' ;;
    t)
      # use https
      https='true' ;;
    u)
      # change $FILE to the specified file with -u
      upl='true'
      FILE="${OPTARG}" ;;
    w)
      # take shot of current window
      win='true' ;;
    x)
      # do not notify dbus, update log, or modify clipboard
      nocomm='true' ;;
    *)
      # print help and EXIT_FAILURE
      usage
      exit 1 ;;
  esac
done

## EXECUTE FUNCTIONS

depends
delay
screenshot
upload

# If the program doesn't exit at the for-loop, the upload failed.
echo 'File was not uploaded, did you specify a valid filename?'
